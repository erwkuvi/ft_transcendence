FROM node:18-alpine

RUN apk add --no-cache nginx

WORKDIR /app

# Copy package.json and install dependencies
COPY package.json package-lock.json ./
RUN npm install


COPY . .
RUN npm run build
RUN cp -rf ./build ../usr/share/nginx/html
# COPY ./build/ ../usr/share/nginx/html/
ENV PORT=80
EXPOSE 80

# CMD ["npm", "start"]

CMD nginx -g "daemon off;" && npm start --reset-cache
# FROM nginx:alpine

# COPY --from=build /app/build /usr/share/nginx/html
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# EXPOSE 80

# CMD ["nginx", "-g", "daemon off;"]

# FROM alpine:3.19.1V

# RUN apk update; apk upgrade; apk add nginx; apk add openssl; apk add --no-cache gettext

# COPY ./nginx.conf /etc/nginx/nginx.conf

# WORKDIR /usr/share/nginx/html

# # EXPOSE 4242

# CMD ["nginx", "-g", "daemon off;"]







############
# FROM node:18-alpine AS builder

# # Set working directory in the container
# WORKDIR /app

# # Copy package.json and install dependencies
# COPY package.json package-lock.json ./
# RUN npm install

# # Copy all files and build the project
# COPY . .
# RUN npm run build

# # --- Second stage: Nginx for serving the built files ---
# FROM nginx:alpine

# # Copy built React files to Nginx public folder
# COPY --from=builder /app/build /usr/share/nginx/html

# # Expose port 80
# EXPOSE 80

# # Start Nginx
# CMD ["nginx", "-g", "daemon off;"]
