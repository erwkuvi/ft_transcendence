events {}

http {

    client_max_body_size 2M;

    server {
        listen 80;
        server_name localhost;
        return 302 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/fullchain.crt;
				ssl_certificate_key /etc/nginx/certs/privkey.key;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";


        root /usr/share/nginx/html;

		index index.html;
        location = /413.json {
            internal;
            default_type application/json;
            return 413 '{"message": "Request entity too large"}';
        }

        location / {
            proxy_pass http://react:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

				location ~ ^/(user_management|api|mfa|users|friends|media|42-.+)/ {
				    proxy_pass http://django:8000;
				    proxy_set_header Host $host;
				    proxy_set_header X-Real-IP $remote_addr;
				    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				    proxy_set_header X-Forwarded-Proto $scheme;
				}

    		location /ws/ {
    		    proxy_pass http://django:8000;
    		    proxy_http_version 1.1;
    		    proxy_set_header Upgrade $http_upgrade;
    		    proxy_set_header Connection "upgrade";
    		    proxy_set_header Host $host;
    		    proxy_set_header X-Real-IP $remote_addr;
    		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		    proxy_set_header X-Forwarded-Proto $scheme;
    		}

				#location /test {
        #    return 200 '{"hello world"}';
				#}
    }
}
